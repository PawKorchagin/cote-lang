fn mul(a, b) {
    res = array(50);
    for (i = 0; i < 50; i += 1) {
        res[i] = 0;
    }

    for (i = 0; i < 25; i += 1) {
        carry = 0;
        for (j = 0; j < 25; j += 1) {
            idx = i + j;
            prod = res[idx] + a[i] * b[j] + carry;
            res[idx] = prod % 10;
            carry = prod / 10;
        }
        res[i] = res[i] + carry;
    }
    return res;
}

fn set_x(x) {
    arr = array(50);
    for (i = 0; i < 50; i += 1) {
        arr[i] = x % 10;
        x = x / 10;
    }
    return arr;
}

fn fact(n) {
    if (n <= 1) {
        return set_x(1);
    }
    prev = fact(n - 1);
    cur = set_x(n);
    return mul(cur, prev);
}

fn main() {
    n = 20;
    res = fact(n);

    top = 49;
    idx = top;
    while (res[idx] == 0) {
        if (idx == 0) {
            break;
        }
        idx = idx - 1;
    }

    for (i = idx; i >= 0; i -= 1) {
        print_(res[i]);
    }
    println();
}
